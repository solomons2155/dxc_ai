{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "adfprdedwaze01"
        },
        "trigger MainLoad 2nd phase_properties_mainLoad - 2nd phase 6am_parameters_StartTime": {
            "type": "string",
            "defaultValue": "@trigger().startTime"
        },
        "trigger MainLoad 2nd phase_properties_mainLoad - 2nd phase 6am_parameters_NewSession": {
            "type": "string",
            "defaultValue": "N"
        },
        "trigger MainLoad_properties_mainLoad_parameters_StartTime": {
            "type": "string",
            "defaultValue": "@trigger().startTime"
        },
        "trigger MainLoad_properties_mainLoad_parameters_NewSession": {
            "type": "string",
            "defaultValue": "Y"
        },
        "IRNZPRDEDWAZE01_properties_typeProperties_linkedInfo_resourceId": {
            "type": "string",
            "defaultValue": "/subscriptions/f68901ba-3f12-475a-bbd5-f3a07b014dba/resourcegroups/RG-PROD-NZDW-AE/providers/Microsoft.DataFactory/factories/adfprodnzdw01/integrationruntimes/IR-PROD-NZDW-01"
        },
        "eRoadAPI_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://api.apac.eroad.com/v1/"
        },
        "eRoad_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://api.apac.eroad.com/v1/"
        },
        "eRoad_S3_properties_typeProperties_accessKeyId": {
            "type": "string",
            "defaultValue": "AKIAJJRS4NMTPRHJBWOA"
        },
        "SharePointOnline_TSAnalytics_properties_typeProperties_servicePrincipalId": {
            "type": "string",
            "defaultValue": " c7fb2564-cc23-4b1e-b44f-2fdd6cbf0840"
        },
        "DW_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "PROD-DW"
        },
        "ADL_ARCHIVE_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://slrprdedwaze02.dfs.core.windows.net"
        },
        "ADL_RAW_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://slrprdedwaze01.dfs.core.windows.net"
        },
        "SharePoint_TS_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "http://our.downer.co.nz/business/ts/_vti_bin/listdata.svc"
        },
        "SharePoint_TS_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "INX_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "PROD-INX"
        },
        "SharePoint_TSAnalytics_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "http://our.downer.co.nz/business/TS-Analytics/_vti_bin/listdata.svc"
        },
        "SharePoint_TSAnalytics_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "JDE_Tennix_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "PROD-JDE-TENNIX"
        },
        "JDE_Tennix_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "SharePoint_Survey123_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "http://our.downer.co.nz/functional/zh/Survey123/_vti_bin/listdata.svc"
        },
        "SharePoint_Survey123_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "JDE_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "PROD-JDE"
        },
        "JDE_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "SharePoint_SPZeroHarm_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "http://our.downer.co.nz/functional/zh/_vti_bin/listdata.svc"
        },
        "SharePoint_SPZeroHarm_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "Survey123_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "PROD-Survey123"
        },
        "Survey123_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "ADUsers_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "D:\\NationalDataWarehouse\\Active Directory"
        },
        "ADUsers_properties_typeProperties_userId": {
            "type": "string",
            "defaultValue": "works\\_svc_dw_rodataaccess"
        },
        "ADL_RAW_IRNZPRDEDWAZE01_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://slrprdedwaze01.dfs.core.windows.net"
        },
        "VAULT_PROD_EDW_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://kvprdedwaze.vault.azure.net/"
        },
        "Ftp_MetService_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "ftp://ftp1.metservice.com"
        },
        "Ftp_MetService_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "downer"
        },
        "ADUserPhotos_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "*.jpg"
        },
        "ADUserPhotos_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "ADUserPhotos"
        },
        "ADUserDetails_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@concat('ADUserDetails_',formatDateTime(dataset().windowStartTime,'yyyyMMdd'),'.csv')"
        },
        "ADUserDetails_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "ADUserDetails"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/trigger MainLoad 2nd phase')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "mainLoad - 2nd phase 6am",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "StartTime": "[parameters('trigger MainLoad 2nd phase_properties_mainLoad - 2nd phase 6am_parameters_StartTime')]",
                            "NewSession": "[parameters('trigger MainLoad 2nd phase_properties_mainLoad - 2nd phase 6am_parameters_NewSession')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2018-11-21T09:34:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                30
                            ],
                            "hours": [
                                17
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/mainLoad - 2nd phase 6am')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/trigger MainLoad')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "mainLoad",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "StartTime": "[parameters('trigger MainLoad_properties_mainLoad_parameters_StartTime')]",
                            "NewSession": "[parameters('trigger MainLoad_properties_mainLoad_parameters_NewSession')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2018-11-10T22:12:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "hours": [
                                14
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/mainLoad')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/IRVMPRDEDWAZE01')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "description": "Self-hosted Integration runtime created using ARM template",
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/IRNZPRDEDWAZE01')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "description": "This is a test linked integration runtime",
                "typeProperties": {
                    "linkedInfo": {
                        "resourceId": "[parameters('IRNZPRDEDWAZE01_properties_typeProperties_linkedInfo_resourceId')]",
                        "authorizationType": "Rbac"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadAPI')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "[parameters('eRoadAPI_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoad')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "[parameters('eRoad_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoad_S3')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AmazonS3",
                "typeProperties": {
                    "accessKeyId": "[parameters('eRoad_S3_properties_typeProperties_accessKeyId')]",
                    "secretAccessKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "PROD-eRoadS3"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SharePointOnline_TSAnalytics')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "TS Analytics SharePoint Online List",
                "annotations": [],
                "type": "SharePointOnlineList",
                "typeProperties": {
                    "siteUrl": "https://downergroup.sharepoint.com/sites/TS-Analytics",
                    "tenantId": "fa4bc6e2-c0ed-43ec-9d6d-145e7e36a1a5",
                    "servicePrincipalId": "[parameters('SharePointOnline_TSAnalytics_properties_typeProperties_servicePrincipalId')]",
                    "servicePrincipalKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "PROD-NDW-SERVICE-APP-KEY"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DW')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "NZ National Data Warehouse",
                "annotations": [],
                "type": "AzureSqlDW",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('DW_properties_typeProperties_connectionString_secretName')]"
                    }
                },
                "connectVia": {
                    "referenceName": "IRVMPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRVMPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADL_ARCHIVE')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ADL_ARCHIVE_properties_typeProperties_url')]"
                },
                "connectVia": {
                    "referenceName": "IRVMPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRVMPRDEDWAZE01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADL_RAW')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ADL_RAW_properties_typeProperties_url')]"
                },
                "connectVia": {
                    "referenceName": "IRVMPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRVMPRDEDWAZE01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SharePoint_TS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Connection to SharePoint /ts site. http://our.downer.co.nz/business/ts",
                "annotations": [],
                "type": "OData",
                "typeProperties": {
                    "url": "[parameters('SharePoint_TS_properties_typeProperties_url')]",
                    "authenticationType": "Windows",
                    "userName": "[parameters('SharePoint_TS_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/INX')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Production instance of INX ",
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('INX_properties_typeProperties_connectionString_secretName')]"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SharePoint_TSAnalytics')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "OData",
                "typeProperties": {
                    "url": "[parameters('SharePoint_TSAnalytics_properties_typeProperties_url')]",
                    "authenticationType": "Windows",
                    "userName": "[parameters('SharePoint_TSAnalytics_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE_Tennix')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "JDE9.0",
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('JDE_Tennix_properties_typeProperties_connectionString_secretName')]"
                    },
                    "userName": "[parameters('JDE_Tennix_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SharePoint_Survey123')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Survey123 SharePoint lists",
                "annotations": [],
                "type": "OData",
                "typeProperties": {
                    "url": "[parameters('SharePoint_Survey123_properties_typeProperties_url')]",
                    "authenticationType": "Windows",
                    "userName": "[parameters('SharePoint_Survey123_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('JDE_properties_typeProperties_connectionString_secretName')]"
                    },
                    "userName": "[parameters('JDE_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SharePoint_SPZeroHarm')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Conenction to SharePoint ZeroHarm Site",
                "annotations": [],
                "type": "OData",
                "typeProperties": {
                    "url": "[parameters('SharePoint_SPZeroHarm_properties_typeProperties_url')]",
                    "authenticationType": "Windows",
                    "userName": "[parameters('SharePoint_SPZeroHarm_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Survey123')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('Survey123_properties_typeProperties_connectionString_secretName')]"
                    },
                    "userName": "[parameters('Survey123_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADUsers')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "FileServer",
                "typeProperties": {
                    "host": "[parameters('ADUsers_properties_typeProperties_host')]",
                    "userId": "[parameters('ADUsers_properties_typeProperties_userId')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "svcDWrodataaccess"
                    }
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADL_RAW_IRNZPRDEDWAZE01')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ADL_RAW_IRNZPRDEDWAZE01_properties_typeProperties_url')]"
                },
                "connectVia": {
                    "referenceName": "IRNZPRDEDWAZE01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRNZPRDEDWAZE01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/VAULT_PROD_EDW')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('VAULT_PROD_EDW_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Ftp_MetService')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "FtpServer",
                "typeProperties": {
                    "host": "[parameters('Ftp_MetService_properties_typeProperties_host')]",
                    "port": 21,
                    "enableSsl": false,
                    "enableServerCertificateValidation": false,
                    "authenticationType": "Basic",
                    "userName": "[parameters('Ftp_MetService_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "VAULT_PROD_EDW",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "PROD-MetServiceFTP"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/VAULT_PROD_EDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadAPI_Drivers')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "eRoadAPI",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "requestURL": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "eRoad"
                },
                "annotations": [],
                "type": "HttpFile",
                "structure": [
                    {
                        "name": "count",
                        "type": "Int64"
                    },
                    {
                        "name": "offset",
                        "type": "Int64"
                    },
                    {
                        "name": "total",
                        "type": "Int64"
                    },
                    {
                        "name": "id",
                        "type": "String"
                    },
                    {
                        "name": "firstName",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "type": "String"
                    },
                    {
                        "name": "alias",
                        "type": "String"
                    },
                    {
                        "name": "groups",
                        "type": "String"
                    },
                    {
                        "name": "licenses",
                        "type": "String"
                    },
                    {
                        "name": "active",
                        "type": "Boolean"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['drivers']",
                        "jsonPathDefinition": {
                            "count": "$.['count']",
                            "offset": "$.['offset']",
                            "total": "$.['total']",
                            "id": "[['id']",
                            "firstName": "[['firstName']",
                            "lastName": "[['lastName']",
                            "alias": "[['alias']",
                            "groups": "[['groups']",
                            "licenses": "[['licenses']",
                            "active": "[['active']"
                        }
                    },
                    "relativeUrl": {
                        "value": "@dataset().requestURL",
                        "type": "Expression"
                    },
                    "requestMethod": "GET",
                    "additionalHeaders": "Accept:application/json,\nApiKey:pGWpTHXhuSuxrfokG9UurT5idWHXjaMV"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/eRoadAPI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadAPI_Vehicles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "eRoadAPI",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "requestURL": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "eRoad"
                },
                "annotations": [],
                "type": "HttpFile",
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['vehicles']",
                        "jsonPathDefinition": {
                            "count": "$.['count']",
                            "offset": "$.['offset']",
                            "total": "$.['total']",
                            "id": "[['id']",
                            "name": "[['name']",
                            "registrationPlate": "[['registrationPlate']",
                            "registrationState": "[['registrationState']",
                            "make": "[['make']",
                            "model": "[['model']",
                            "year": "[['year']",
                            "axles": "[['axles']",
                            "weightType": "[['weightType']",
                            "rucVehicleStatus": "[['rucVehicleStatus']",
                            "vin": "[['vin']",
                            "assetCode": "[['assetCode']",
                            "costCentre": "[['costCentre']",
                            "vehicleType": "[['vehicleType']",
                            "fleets": "[['fleets']"
                        }
                    },
                    "relativeUrl": {
                        "value": "@dataset().requestURL",
                        "type": "Expression"
                    },
                    "requestMethod": "GET",
                    "additionalHeaders": "Accept:application/json,\nApiKey:pGWpTHXhuSuxrfokG9UurT5idWHXjaMV"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/eRoadAPI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadS3_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "eRoad_S3",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "loadDate": {
                        "type": "String",
                        "defaultValue": "2018-11-11T00:00:00Z"
                    },
                    "fileName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "eRoad"
                },
                "annotations": [],
                "type": "AmazonS3Object",
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "quoteChar": "\"",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": true
                    },
                    "key": {
                        "value": "@dataset().fileName",
                        "type": "Expression"
                    },
                    "prefix": "",
                    "bucketName": "eroad-apac-downer-nz"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/eRoad_S3')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadS3_folder')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "eRoad_S3",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "eRoad"
                },
                "annotations": [],
                "type": "AmazonS3Object",
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "bucketName": "eroad-apac-downer-nz"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/eRoad_S3')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SPOTSAnalytics_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for TS-Analytics SharePoint Online lists",
                "linkedServiceName": {
                    "referenceName": "SharePointOnline_TSAnalytics",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_path": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SharePointOnline"
                },
                "annotations": [],
                "type": "SharePointOnlineListResource",
                "schema": [],
                "typeProperties": {
                    "listName": {
                        "value": "@dataset().cw_path",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SharePointOnline_TSAnalytics')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_DW')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized destination dataset for Azure DW",
                "linkedServiceName": {
                    "referenceName": "DW",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_tableName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().cw_tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_ADL_ARCHIVE_ORC')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADL_ARCHIVE",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "folder_name": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "structure": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "Orc",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().file_name",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().folder_name",
                            "type": "Expression"
                        }
                    },
                    "orcCompressionCodec": "none"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADL_ARCHIVE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_DW_V2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "V2 Dataset for DW connection. Behaviour is different in copy actiivty used.",
                "linkedServiceName": {
                    "referenceName": "DW",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "string"
                    },
                    "cw_schemaName": {
                        "type": "string"
                    },
                    "cw_tableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().cw_schemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().cw_tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_ADL_RAW_BINARY')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADL_RAW",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "bsFolderName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().bsFolderName",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADL_RAW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_ADL_RAW_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADL_RAW",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "folder_name": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "structure": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().file_name",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().folder_name",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\"",
                    "nullValue": "\\N",
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADL_RAW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/meta_schemata')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "SCHEMATA tables for non-SQL data sources",
                "linkedServiceName": {
                    "referenceName": "DW",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "structure": [
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "dataFactory",
                        "type": "String"
                    },
                    {
                        "name": "sourceName",
                        "type": "String"
                    },
                    {
                        "name": "sourceType",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerID",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerName",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerTime",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerType",
                        "type": "String"
                    },
                    {
                        "name": "tableCatalog",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "columnName"
                    },
                    {
                        "name": "ordinalPosition",
                        "type": "Int32"
                    },
                    {
                        "name": "columnDefault",
                        "type": "String"
                    },
                    {
                        "name": "isNullable",
                        "type": "String"
                    },
                    {
                        "name": "dataType",
                        "type": "String"
                    },
                    {
                        "name": "characterMaximumLength",
                        "type": "Int32"
                    },
                    {
                        "name": "characterOctetLength",
                        "type": "Int32"
                    },
                    {
                        "name": "numericPrecision",
                        "type": "Byte"
                    },
                    {
                        "name": "numericPrecisionRadix",
                        "type": "Int16"
                    },
                    {
                        "name": "numericScale",
                        "type": "Int32"
                    }
                ],
                "typeProperties": {
                    "tableName": "information_schema.columns"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/meta_adfSession')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "DW",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "structure": [
                    {
                        "name": "sessionNo",
                        "type": "String"
                    },
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "dwTableSchema",
                        "type": "String"
                    },
                    {
                        "name": "dwTableName",
                        "type": "String"
                    },
                    {
                        "name": "StatusBS",
                        "type": "String"
                    },
                    {
                        "name": "StatusARC",
                        "type": "String"
                    },
                    {
                        "name": "StatusDWRAW",
                        "type": "String"
                    },
                    {
                        "name": "StatusDWODS",
                        "type": "String"
                    },
                    {
                        "name": "StatusDWODSH",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "tableName": "[[META].[adfSession]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/meta_adfLoadSchema')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "DW",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "structure": [
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "dataFactory",
                        "type": "String"
                    },
                    {
                        "name": "sourceName",
                        "type": "String"
                    },
                    {
                        "name": "sourceType",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerID",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerName",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerTime",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerType",
                        "type": "String"
                    },
                    {
                        "name": "tableCatalog",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "columnName",
                        "type": "String"
                    },
                    {
                        "name": "ordinalPosition",
                        "type": "Int32"
                    },
                    {
                        "name": "columnDefault",
                        "type": "String"
                    },
                    {
                        "name": "isNullable",
                        "type": "String"
                    },
                    {
                        "name": "dataType",
                        "type": "String"
                    },
                    {
                        "name": "characterMaximumLength",
                        "type": "Int32"
                    },
                    {
                        "name": "characterOctetLength",
                        "type": "Int32"
                    },
                    {
                        "name": "numericPrecision",
                        "type": "Byte"
                    },
                    {
                        "name": "numericPrecisionRadix",
                        "type": "Int16"
                    },
                    {
                        "name": "numericScale",
                        "type": "Int32"
                    }
                ],
                "typeProperties": {
                    "tableName": "[[META].[adfLoadSchema]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_ADL_RAW_ORC')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADL_RAW",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "folder_name": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "structure": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Internal"
                },
                "annotations": [],
                "type": "Orc",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().file_name",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().folder_name",
                            "type": "Expression"
                        }
                    }
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADL_RAW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/INX_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SqlServer_Survey123",
                "linkedServiceName": {
                    "referenceName": "INX",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_tableName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "INX"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().cw_tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/INX')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TSAnalytics_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for TS-Analytics SharePoint lists",
                "linkedServiceName": {
                    "referenceName": "SharePoint_TSAnalytics",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_path": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "type": "ODataResource",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "path": {
                        "value": "@dataset().cw_path",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SharePoint_TSAnalytics')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for JDE",
                "linkedServiceName": {
                    "referenceName": "JDE",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_tableName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "JDE"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().cw_tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/JDE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TS_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SharePoint_TS",
                "linkedServiceName": {
                    "referenceName": "SharePoint_TS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_path": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "type": "ODataResource",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "path": {
                        "value": "@dataset().cw_path",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SharePoint_TS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Survey123SP_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SharePoint Survey123",
                "linkedServiceName": {
                    "referenceName": "SharePoint_Survey123",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_path": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "type": "ODataResource",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "path": {
                        "value": "@dataset().cw_path",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SharePoint_Survey123')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE_Tennix_DataSet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SqlServer_Survey123",
                "linkedServiceName": {
                    "referenceName": "JDE_Tennix",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_tableName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "JDE_Tennix"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().cw_tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/JDE_Tennix')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/template_OData')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SharePoint_Survey123",
                "linkedServiceName": {
                    "referenceName": "SharePoint_Survey123",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_path": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Templates"
                },
                "annotations": [],
                "type": "ODataResource",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "path": {
                        "value": "@dataset().cw_path",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SharePoint_Survey123')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/template_schema')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "MSSQL Schema objects",
                "linkedServiceName": {
                    "referenceName": "Survey123",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Templates"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": [
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "dataFactory",
                        "type": "String"
                    },
                    {
                        "name": "sourceName",
                        "type": "String"
                    },
                    {
                        "name": "sourceType",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerID",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerName",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerTime",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerType",
                        "type": "String"
                    },
                    {
                        "name": "tableCatalog",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "columnName"
                    },
                    {
                        "name": "ordinalPosition",
                        "type": "Int32"
                    },
                    {
                        "name": "columnDefault",
                        "type": "String"
                    },
                    {
                        "name": "isNullable",
                        "type": "String"
                    },
                    {
                        "name": "dataType",
                        "type": "String"
                    },
                    {
                        "name": "characterMaximumLength",
                        "type": "Int32"
                    },
                    {
                        "name": "characterOctetLength",
                        "type": "Int32"
                    },
                    {
                        "name": "numericPrecision",
                        "type": "Byte"
                    },
                    {
                        "name": "numericPrecisionRadix",
                        "type": "Int16"
                    },
                    {
                        "name": "numericScale",
                        "type": "Int32"
                    }
                ],
                "typeProperties": {
                    "tableName": "information_schema.columns"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Survey123')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/template_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SqlServer_Survey123",
                "linkedServiceName": {
                    "referenceName": "Survey123",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_tableName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Templates"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().cw_tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Survey123')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Survey123DB_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SqlServer_Survey123",
                "linkedServiceName": {
                    "referenceName": "Survey123",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_tableName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Survey123DB"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().cw_tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Survey123')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/INX_schema')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "MSSQL Schema objects",
                "linkedServiceName": {
                    "referenceName": "INX",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "INX"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": [
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "dataFactory",
                        "type": "String"
                    },
                    {
                        "name": "sourceName",
                        "type": "String"
                    },
                    {
                        "name": "sourceType",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerID",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerName",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerTime",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerType",
                        "type": "String"
                    },
                    {
                        "name": "tableCatalog",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "columnName"
                    },
                    {
                        "name": "ordinalPosition",
                        "type": "Int32"
                    },
                    {
                        "name": "columnDefault",
                        "type": "String"
                    },
                    {
                        "name": "isNullable",
                        "type": "String"
                    },
                    {
                        "name": "dataType",
                        "type": "String"
                    },
                    {
                        "name": "characterMaximumLength",
                        "type": "Int32"
                    },
                    {
                        "name": "characterOctetLength",
                        "type": "Int32"
                    },
                    {
                        "name": "numericPrecision",
                        "type": "Byte"
                    },
                    {
                        "name": "numericPrecisionRadix",
                        "type": "Int16"
                    },
                    {
                        "name": "numericScale",
                        "type": "Int32"
                    }
                ],
                "typeProperties": {
                    "tableName": "information_schema.columns"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/INX')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE_schema')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "MSSQL Schema objects",
                "linkedServiceName": {
                    "referenceName": "JDE",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "JDE"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": [
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "dataFactory",
                        "type": "String"
                    },
                    {
                        "name": "sourceName",
                        "type": "String"
                    },
                    {
                        "name": "sourceType",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerID",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerName",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerTime",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerType",
                        "type": "String"
                    },
                    {
                        "name": "tableCatalog",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "columnName"
                    },
                    {
                        "name": "ordinalPosition",
                        "type": "Int32"
                    },
                    {
                        "name": "columnDefault",
                        "type": "String"
                    },
                    {
                        "name": "isNullable",
                        "type": "String"
                    },
                    {
                        "name": "dataType",
                        "type": "String"
                    },
                    {
                        "name": "characterMaximumLength",
                        "type": "Int32"
                    },
                    {
                        "name": "characterOctetLength",
                        "type": "Int32"
                    },
                    {
                        "name": "numericPrecision",
                        "type": "Byte"
                    },
                    {
                        "name": "numericPrecisionRadix",
                        "type": "Int16"
                    },
                    {
                        "name": "numericScale",
                        "type": "Int32"
                    }
                ],
                "typeProperties": {
                    "tableName": "information_schema.columns"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/JDE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Survey123DB_schema')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "MSSQL Schema objects",
                "linkedServiceName": {
                    "referenceName": "Survey123",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Survey123DB"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": [
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "dataFactory",
                        "type": "String"
                    },
                    {
                        "name": "sourceName",
                        "type": "String"
                    },
                    {
                        "name": "sourceType",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerID",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerName",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerTime",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerType",
                        "type": "String"
                    },
                    {
                        "name": "tableCatalog",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "columnName"
                    },
                    {
                        "name": "ordinalPosition",
                        "type": "Int32"
                    },
                    {
                        "name": "columnDefault",
                        "type": "String"
                    },
                    {
                        "name": "isNullable",
                        "type": "String"
                    },
                    {
                        "name": "dataType",
                        "type": "String"
                    },
                    {
                        "name": "characterMaximumLength",
                        "type": "Int32"
                    },
                    {
                        "name": "characterOctetLength",
                        "type": "Int32"
                    },
                    {
                        "name": "numericPrecision",
                        "type": "Byte"
                    },
                    {
                        "name": "numericPrecisionRadix",
                        "type": "Int16"
                    },
                    {
                        "name": "numericScale",
                        "type": "Int32"
                    }
                ],
                "typeProperties": {
                    "tableName": "information_schema.columns"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Survey123')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADUserPhotos')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "AD Photo JPEG files in shared folder",
                "linkedServiceName": {
                    "referenceName": "ADUsers",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "ADUsers"
                },
                "annotations": [],
                "type": "FileShare",
                "typeProperties": {
                    "fileName": "[parameters('ADUserPhotos_properties_typeProperties_fileName')]",
                    "folderPath": "[parameters('ADUserPhotos_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADUsers')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADUserDetails')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "AD user details in CSV format",
                "linkedServiceName": {
                    "referenceName": "ADUsers",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "windowStartTime": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ADUsers"
                },
                "annotations": [],
                "type": "FileShare",
                "structure": [
                    {
                        "name": "SID",
                        "type": "String"
                    },
                    {
                        "name": "ObjectGUID",
                        "type": "String"
                    },
                    {
                        "name": "Name",
                        "type": "String"
                    },
                    {
                        "name": "GivenName",
                        "type": "String"
                    },
                    {
                        "name": "Surname",
                        "type": "String"
                    },
                    {
                        "name": "Title",
                        "type": "String"
                    },
                    {
                        "name": "Office",
                        "type": "String"
                    },
                    {
                        "name": "City",
                        "type": "String"
                    },
                    {
                        "name": "StreetAddress",
                        "type": "String"
                    },
                    {
                        "name": "POBox",
                        "type": "String"
                    },
                    {
                        "name": "OfficePhone",
                        "type": "String"
                    },
                    {
                        "name": "Mobile",
                        "type": "String"
                    },
                    {
                        "name": "EmployeeID",
                        "type": "String"
                    },
                    {
                        "name": "EmailAddress",
                        "type": "String"
                    },
                    {
                        "name": "Manager",
                        "type": "String"
                    },
                    {
                        "name": "Division",
                        "type": "String"
                    },
                    {
                        "name": "Department",
                        "type": "String"
                    },
                    {
                        "name": "departmentNumber",
                        "type": "String"
                    },
                    {
                        "name": "Company",
                        "type": "String"
                    },
                    {
                        "name": "Country",
                        "type": "String"
                    },
                    {
                        "name": "SamAccountName",
                        "type": "String"
                    },
                    {
                        "name": "UserPrincipalName",
                        "type": "String"
                    },
                    {
                        "name": "CanonicalName",
                        "type": "String"
                    },
                    {
                        "name": "DistinguishedName",
                        "type": "String"
                    },
                    {
                        "name": "Enabled",
                        "type": "String"
                    },
                    {
                        "name": "whenCreated",
                        "type": "String"
                    },
                    {
                        "name": "WhenChanged",
                        "type": "String"
                    },
                    {
                        "name": "hasPhoto",
                        "type": "String"
                    },
                    {
                        "name": "dateCreated",
                        "type": "String"
                    },
                    {
                        "name": "dateChanged",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "quoteChar": "\"",
                        "nullValue": "\\N",
                        "encodingName": null,
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": true
                    },
                    "fileName": {
                        "value": "[parameters('ADUserDetails_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": "[parameters('ADUserDetails_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADUsers')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE_Tennix_Schema')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "MSSQL Schema objects",
                "linkedServiceName": {
                    "referenceName": "JDE_Tennix",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "JDE_Tennix"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "structure": [
                    {
                        "name": "pipelineName",
                        "type": "String"
                    },
                    {
                        "name": "dataFactory",
                        "type": "String"
                    },
                    {
                        "name": "sourceName",
                        "type": "String"
                    },
                    {
                        "name": "sourceType",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerID",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerName",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerTime",
                        "type": "String"
                    },
                    {
                        "name": "pipelineTriggerType",
                        "type": "String"
                    },
                    {
                        "name": "tableCatalog",
                        "type": "String"
                    },
                    {
                        "name": "tableSchema",
                        "type": "String"
                    },
                    {
                        "name": "tableName",
                        "type": "String"
                    },
                    {
                        "name": "columnName"
                    },
                    {
                        "name": "ordinalPosition",
                        "type": "Int32"
                    },
                    {
                        "name": "columnDefault",
                        "type": "String"
                    },
                    {
                        "name": "isNullable",
                        "type": "String"
                    },
                    {
                        "name": "dataType",
                        "type": "String"
                    },
                    {
                        "name": "characterMaximumLength",
                        "type": "Int32"
                    },
                    {
                        "name": "characterOctetLength",
                        "type": "Int32"
                    },
                    {
                        "name": "numericPrecision",
                        "type": "Byte"
                    },
                    {
                        "name": "numericPrecisionRadix",
                        "type": "Int16"
                    },
                    {
                        "name": "numericScale",
                        "type": "Int32"
                    }
                ],
                "typeProperties": {
                    "tableName": "information_schema.columns"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/JDE_Tennix')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SPZeroHarm_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Multipurpose parameterized source dataset for SharePoint_SPZeroHarm",
                "linkedServiceName": {
                    "referenceName": "SharePoint_SPZeroHarm",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "cw_structure": {
                        "type": "Array"
                    },
                    "cw_path": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "type": "ODataResource",
                "structure": {
                    "value": "@dataset().cw_structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "path": {
                        "value": "@dataset().cw_path",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SharePoint_SPZeroHarm')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADL_RAW_IRNZPRDEDWAZE01",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "folder_name": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "structure": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Internal/IntegrationRuntimes"
                },
                "annotations": [],
                "type": "Orc",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().file_name",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().folder_name",
                            "type": "Expression"
                        }
                    },
                    "orcCompressionCodec": "none"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADL_RAW_IRNZPRDEDWAZE01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_ADL_RAW_BINARY_IRNZPRDEDWAZE01')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADL_RAW_IRNZPRDEDWAZE01",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "bsFolderName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Internal/IntegrationRuntimes"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().bsFolderName",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADL_RAW_IRNZPRDEDWAZE01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/010 dim Sharepoint')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "load SharePoint based dimensions (from Sharepoint lists ONLY)",
                "activities": [
                    {
                        "name": "upd_Threshold",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Threshold]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimThreshold",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Threshold",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimThreshold]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/310 DM ZeroHarm TS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Load data mart tables for Zero Harm TS",
                "activities": [
                    {
                        "name": "upd_EmployeeBU",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dmZHstg].[scd1_dimEmployeeBU]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/210 fact ZeroHarm')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "build facts for Zero Harm",
                "activities": [
                    {
                        "name": "upd_Exposure_key",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Exposure_key]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factExposure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Exposure_key",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factExposure]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EventInjury",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EventInjury]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factEventInjury",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EventInjury",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factEventInjury]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EventAction",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EventAction]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factEventAction",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EventAction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factEventAction]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SafetySurvey_key",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SafetySurvey_key]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factSafetySurvey",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SafetySurvey_key",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factSafetySurvey]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveySBCResponse",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveySBCResponse]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyCROResponse",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyCROResponse]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyCCAResponse",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyCCAResponse]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factSafetySurveyResponse",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyCCAResponse",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_SurveyCCIResponse",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_SurveySBCResponse",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_SurveyCROResponse",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_factSafetySurvey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factSafetySurveyResponse]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyCCIResponse",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyCCIResponse]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyActionTrans",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_factSafetySurvey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyActionTrans]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factSafetySurveyAction",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyActionTrans",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factSafetySurveyAction]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_DriverLeaderBoard",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_DriverLeaderBoard]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factDriverLeaderBoard",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_DriverLeaderBoard",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factDriverLeaderBoard]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Event",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Event]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factEvent",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Event",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factEvent]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SafetyAction",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimActionAssignedTo",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SafetyAction]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_factSafetyAction",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SafetyAction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_factSafetyAction]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_ActionAssignedTo",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_factSafetySurveyAction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_factEvent",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_factSafetySurvey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_factEventAction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_ActionAssignedTo]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimActionAssignedTo",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_ActionAssignedTo",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimActionAssignedTo]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/010 dim Survey123')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "load Survey123DB dimensions (from Survey123 database ONLY)",
                "activities": [
                    {
                        "name": "upd_SurveyLookup",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyLookup]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSurveyLookup",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyLookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSurveyLookup]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyTopic",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimSurveyLookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyTopic]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSurveyTopic",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyTopic",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSurveyTopic]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyScenario",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimSurveyLookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyScenario]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSurveyScenario",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyScenario",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSurveyScenario]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyControl",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimSurveyLookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyControl]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSurveyControl",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyControl",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSurveyControl]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyAction",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimSurveyLookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyAction]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSurveyAction",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyAction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSurveyAction]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SurveyQuestion",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimSurveyLookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SurveyQuestion]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSurveyQuestion",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SurveyQuestion",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSurveyQuestion]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/110 dim mix 01')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "load dimensions referenced from multiple data sources. Need to run AFTER first set of dimensions ready",
                "activities": [
                    {
                        "name": "upd_Excl_JDEEmployee",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_JDEEmployee]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Employee",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Excl_JDEAllEmployee",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Employee]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Excl_ADUserDetails",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_ADUserDetails]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd2_dimEmployee",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Employee",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd2_dimEmployee]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Excl_INXPeople",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_INXPeople]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Excl_Survey123UserDetails",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_Survey123UserDetails]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Excl_eRoadDrivers",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_eRoadDrivers]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EmployeeMonthlySafetyTarget",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmployeeMonthlySafetyTarget]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd2_dimEmployeeMonthlySafetyTarget",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EmployeeMonthlySafetyTarget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd2_dimEmployee",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd2_dimEmployeeMonthlySafetyTarget]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EmployeeBU",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd2_dimEmployee",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmployeeBU]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEmployeeBU",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EmployeeBU",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEmployeeBU]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Excl_Survey123Licencing",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_Survey123Licencing]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Excl_JDETennixEmployee",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_JDETennixEmployee]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EmployeeJDE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Excl_JDEEmployee",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_ADUserDetails",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_INXPeople",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_eRoadDrivers",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_Survey123Licencing",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmployeeJDE]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EmployeeJDETennix",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Excl_ADUserDetails",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_INXPeople",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_eRoadDrivers",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_Survey123Licencing",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_Excl_JDETennixEmployee",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmployeeJDETennix]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Excl_JDEAllEmployee",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EmployeeJDE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upd_EmployeeJDETennix",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Excl_JDEAllEmployee]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/010 dim INX')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "load INX dimensions (from INX data ONLY)",
                "activities": [
                    {
                        "name": "upd_InjuryClassification",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_InjuryClassification]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimInjuryClassification",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_InjuryClassification",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimInjuryClassification]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_InjuryType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_InjuryType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimInjuryType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_InjuryType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimInjuryType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_ClassValue",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_ClassValue]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimClassValue",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_ClassValue",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimClassValue]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_InjuryNature",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_InjuryNature]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimInjuryNature",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_InjuryNature",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimInjuryNature]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_BodyPart",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_BodyPart]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimBodyPart",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_BodyPart",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimBodyPart]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_AgencyOfInjury",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_AgencyOfInjury]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimAgencyOfInjury",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_AgencyOfInjury",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimAgencyOfInjury]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_MechanismOfInjury",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_MechanismOfInjury]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimMechanismOfInjury",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_MechanismOfInjury",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimMechanismOfInjury]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_RiskLikelihood",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_RiskLikelihood]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimRiskLikelihood",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_RiskLikelihood",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimRiskLikelihood]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_RiskConsequence",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_RiskConsequence]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimRiskConsequence",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_RiskConsequence",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimRiskConsequence]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EventSubType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EventSubType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEventSubType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EventSubType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimEventType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimEventTypeCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEventSubType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EventType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EventType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEventType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EventType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEventType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EventTypeCategory",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EventTypeCategory]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEventTypeCategory",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EventTypeCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEventTypeCategory]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/010 dim JDE 01')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "load JDE dimensions (based on JDE data ONLY)\nJDE  Org Structure and HR",
                "activities": [
                    {
                        "name": "upd_Company",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Company]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimCompany",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Company",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimCompany]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_BusinessUnitType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_BusinessUnitType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimBusinessUnitType",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_BusinessUnitType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimBusinessUnitType]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Division",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Division]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimDivision",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Division",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimDivision]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Region",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Region]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimRegion",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Region",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimRegion]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Sector",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Sector]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSector",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Sector",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSector]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Organisation",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimSector",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimRegion",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimDivision",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimBusinessUnitType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimCompany",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimBusinessUnit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Organisation]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd2_dimOrganisation",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Organisation",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd2_dimOrganisation]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EmployeePayClass",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmployeePayClass]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEmployeePayClass",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EmployeePayClass",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEmployeePayClass]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EmployeePayStatus",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmployeePayStatus]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEmployeePayStatus",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EmployeePayStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEmployeePayStatus]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_EmploymentStatus",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmploymentStatus]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEmploymentStatus",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EmploymentStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEmploymentStatus]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_OrgHierarchy",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_OrgHierarchy]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd2_dimOrgHierarchy",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_OrgHierarchy",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd2_dimOrgHierarchy]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_SalesCategory",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_SalesCategory]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimSalesCategory",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_SalesCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimSalesCategory]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_BusinessUnit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd2_dimOrgHierarchy",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_BusinessUnit]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimBusinessUnit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_BusinessUnit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimBusinessUnit]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/010 dim Static')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "load static dimensions (have no source)",
                "activities": [
                    {
                        "name": "upd_EmployeeSource",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_EmployeeSource]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimEmployeeSource",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_EmployeeSource",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimEmployeeSource]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_date",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_date]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimDate",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimDate]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_DateRange",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stgDate].[upd_DateRange]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimDateRange",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_DateRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stgDate].[scd1_dimDateRange]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/010 dim JDE 02')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "load JDE dimensions (based on JDE data ONLY)\nJDE  Assets",
                "activities": [
                    {
                        "name": "upd_Item",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Item]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimItem",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Item",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimItem]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_AssetStatus",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_AssetStatus]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimAssetStatus",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_AssetStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimAssetStatus]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_AssetOwnership",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_AssetOwnership]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimAssetOwnership",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_AssetOwnership",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimAssetOwnership]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_AssetMajorGroup",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_AssetMajorGroup]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimAssetMajorGroup",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_AssetMajorGroup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimAssetMajorGroup]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_AssetRateGroup",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_AssetRateGroup]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd1_dimAssetRateGroup",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_AssetRateGroup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd1_dimAssetRateGroup]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "upd_Asset",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "scd1_dimAssetRateGroup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimAssetMajorGroup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimAssetOwnership",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "scd1_dimAssetStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[upd_Asset]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "scd2_dimAsset",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upd_Asset",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[stg].[scd2_dimAsset]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "testSession"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadAPI_CopyAndMerge')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "child of eRoadAPI pipeline \n- tableName is the input parameter\n\nperforms 3 steps\n(1) run multiple Rest API calls in parallel,\n(2) collect each result as separate CSV file in staging BS folder\n(3) merge all CSV into one CSV",
                "activities": [
                    {
                        "name": "getJsonRequests",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSessionRequests Init",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.sessionNo, \n    t.pipelineName, \n\tt.sequence,\n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n\tt.jsonRequestUrl,\n\tt.jsonRequestHeader,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n\tt.bsOperation\nFROM META.adfSessionRequests t\nWHERE t.isActive='Y' \n\tand t.sessionNo = '@{pipeline().parameters.sessionNo}'\n\tand t.pipelineName = '@{pipeline().parameters.pipelineName}'\n\tand t.tableName = '@{pipeline().parameters.tableName}'\nORDER BY t.sequence",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "setSessionRequests Init",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Request Total Rows",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSessionRequests]",
                            "storedProcedureParameters": {
                                "limitRows": {
                                    "value": "20",
                                    "type": "Int32"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.pipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "totalRows": {
                                    "value": {
                                        "value": "@activity('Request Total Rows').output.total",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Request Total Rows",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://api.apac.eroad.com/v1/@{pipeline().parameters.tableName}?limit=20&offset=0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {
                                "Accept": "application/json",
                                "ApiKey": "pGWpTHXhuSuxrfokG9UurT5idWHXjaMV",
                                "Content-Type": "application/json"
                            },
                            "linkedServices": [
                                {
                                    "referenceName": "eRoadAPI",
                                    "type": "LinkedServiceReference"
                                }
                            ]
                        }
                    },
                    {
                        "name": "Filter by Vehicles",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "getJsonRequests",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('getJsonRequests').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().tableName, 'Vehicles')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Vehicle Request",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Filter by Vehicles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Filter by Vehicles').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Copy Vehicle Requests",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [
                                        {
                                            "name": "Source",
                                            "value": "@{concat(item().tableName, item().jsonRequestUrl)}"
                                        },
                                        {
                                            "name": "Destination",
                                            "value": "@{concat('staging/eRoadAPI/Vehicles/', pipeline().parameters.sessionNo)}/@{concat(item().tableName, item().sequence, '.csv')}"
                                        }
                                    ],
                                    "typeProperties": {
                                        "source": {
                                            "type": "HttpSource",
                                            "httpRequestTimeout": "00:01:40"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "eRoadAPI_Vehicles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "requestURL": {
                                                    "value": "@{pipeline().parameters.tableName}@{item().jsonRequestUrl}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_CSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "staging/eRoadAPI/Vehicles/@{pipeline().parameters.sessionNo}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@{item().tableName}@{item().sequence}.csv",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "{}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Merge If Vehicles",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ForEach Vehicle Request",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(length(activity('Filter by Vehicles').output.value), 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Merge Vehicles",
                                    "description": "Merge all CSV files into one CSV",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "staging/eRoadAPI/Vehicles/@{pipeline().parameters.sessionNo}",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": {
                                                    "value": "*",
                                                    "type": "Expression"
                                                }
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "MergeFiles"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_CSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_CSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "@activity('Filter by Vehicles').output.value[0].bsFolderName",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@{pipeline().parameters.tableName}.csv",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Filter by Drivers",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "getJsonRequests",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('getJsonRequests').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().tableName, 'Drivers')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Driver Request",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Filter by Drivers",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Filter by Drivers').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Copy Driver Requests",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [
                                        {
                                            "name": "Source",
                                            "value": "@{concat(pipeline().parameters.tableName, item().jsonRequestUrl)}"
                                        },
                                        {
                                            "name": "Destination",
                                            "value": "@{concat('staging/eRoadAPI/Drivers/', pipeline().parameters.sessionNo)}/@{concat(item().tableName, item().sequence, '.csv')}"
                                        }
                                    ],
                                    "typeProperties": {
                                        "source": {
                                            "type": "HttpSource",
                                            "httpRequestTimeout": "00:01:40"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "eRoadAPI_Drivers",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "requestURL": {
                                                    "value": "@{pipeline().parameters.tableName}@{item().jsonRequestUrl}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_CSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "staging/eRoadAPI/Drivers/@{pipeline().parameters.sessionNo}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@{item().tableName}@{item().sequence}.csv",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "{}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Merge If Drivers",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ForEach Driver Request",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(length(activity('Filter by Drivers').output.value), 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Merge Drivers",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "staging/eRoadAPI/Drivers/@{pipeline().parameters.sessionNo}",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "MergeFiles"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_CSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_CSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "@activity('Filter by Drivers').output.value[0].bsFolderName",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@{pipeline().parameters.tableName}.csv",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test01"
                    },
                    "pipelineName": {
                        "type": "String",
                        "defaultValue": "eRoadAPI"
                    },
                    "tableName": {
                        "type": "String",
                        "defaultValue": "Drivers"
                    }
                },
                "folder": {
                    "name": "eRoad"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/linkedServices/eRoadAPI')]",
                "[concat(variables('factoryId'), '/datasets/eRoadAPI_Vehicles')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_CSV')]",
                "[concat(variables('factoryId'), '/datasets/eRoadAPI_Drivers')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SPOTSAnalytics')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.0.2\", \"lastModified\":\"2018-12-17\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().jsonRequestUrl}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SharePointOnlineListSource",
                                                        "query": {
                                                            "value": "$select=Id,EmployeeID,FirstName,LastName,MonthyTarget,ApprovedByValue,EffectiveDate,Modified,Created,CreatedById,ModifiedById",
                                                            "type": "Expression"
                                                        },
                                                        "httpRequestTimeout": "00:05:00"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "OrcWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SPOTSAnalytics_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_path": {
                                                                "value": "@item().jsonRequestUrl",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW_V2",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_schemaName": {
                                                                "value": "@item().dwTableSchema",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = SUBSTRING(table_name, CHARINDEX('_',table_name) + 1, 100),        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'SCHEMATA' AND table_name like 'SPOTSAnalytics%'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "SPOTSAnalytics"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "OData"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2020-07-22T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "SharePointOnline"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/SPOTSAnalytics_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW_V2')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadS3')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.0.2\", \"lastModified\":\"2018-12-17\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession ExtParams",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    s.extParameters as s3FileName,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t JOIN META.adfSession s ON t.pipelineName = s.pipelineName and t.tableName = s.tableName\nWHERE s.pipelineName = '@{pipeline().Pipeline}' and s.sessionNo = '@{pipeline().parameters.sessionNo}'\n",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "eroad-apac-downer-nz/@{item().extParameters}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "FileSystemSource",
                                                        "recursive": true
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "eRoadS3_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "loadDate": "2018-11-11T00:00:00Z",
                                                            "fileName": {
                                                                "value": "@item().s3FileName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "ODS Load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "postCopy Script",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat('ODS.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "[[ODS_@{pipeline().parameters.sourceName}].[upd_@{item().dwTableName}]",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().dwTableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        },
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = SUBSTRING(table_name, CHARINDEX('_',table_name) + 1, 100),        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'SCHEMATA' AND table_name like 'EROADS3_%'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Read S3 folder",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "eRoadS3_folder",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ]
                        }
                    },
                    {
                        "name": "get current files",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Read S3 folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Read S3 folder').output.childItems",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@endswith(item().name, concat(formatDateTime(pipeline().parameters.windowStartTime, 'ddMMyyyy'),'.csv'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setSession ExtParams",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "get current files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSessionExtParameters]",
                            "storedProcedureParameters": {
                                "extParameters": {
                                    "value": {
                                        "value": "@string(activity('get current files').output.value)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "eRoadS3"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "CSV"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test01"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-14T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "eRoad"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/eRoadS3_folder')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/eRoadS3_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAIN ETL PIPELINE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "main nightly ETL process for STG and NDW objects",
                "activities": [
                    {
                        "name": "reload All ETL",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.reloadAll, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "dropSession",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[etl].[dropSession]",
                                        "storedProcedureParameters": {
                                            "dropLog": {
                                                "value": "false",
                                                "type": "String"
                                            },
                                            "packageName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.packageName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "sessionNo": {
                                                "value": {
                                                    "value": "@pipeline().parameters.sessionNo",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "reload All ETL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[etl].[setSession]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setRawStatus",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[etl].[setRawStatus]",
                            "storedProcedureParameters": {
                                "packageName": {
                                    "value": {
                                        "value": "@pipeline().parameters.packageName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "010 dim Static",
                        "description": "load static dimensions (have no source)",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "setRawStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "010 dim Static",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "010 dim JDE 01",
                        "description": "load JDE dimensions (based on JDE data ONLY)\nJDE  Org Structure and HR",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "setRawStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "010 dim JDE 01",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "010 dim JDE 02",
                        "description": "load JDE dimensions (based on JDE data ONLY)\nJDE  Assets",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "setRawStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "010 dim JDE 02",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "110 dim mix 01",
                        "description": "load dimensions referenced from multiple data sources. Need to run AFTER first set of dimensions ready",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "010 dim Static",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "010 dim JDE 01",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "010 dim JDE 02",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "010 dim INX",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "010 dim Survey123",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "010 dim SharePoint",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "110 dim mix 01",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "010 dim INX",
                        "description": "load INX dimensions (from INX data ONLY)",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "setRawStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "010 dim INX",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "010 dim Survey123",
                        "description": "load Survey123DB dimensions (from Survey123 database ONLY)",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "setRawStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "010 dim Survey123",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "210 fact ZeroHarm",
                        "description": "build facts for Zero Harm  ",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "110 dim mix 01",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "210 fact ZeroHarm",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "010 dim SharePoint",
                        "description": "load Sharepoint based dimensions (from Sharepoint lists ONLY)",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "setRawStatus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "010 dim Sharepoint",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "310 DM ZeroHarmTS",
                        "description": "load data mart tables for Zero Harm  ",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "210 fact ZeroHarm",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "310 DM ZeroHarm TS",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@pipeline().parameters.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": {
                                    "value": "@pipeline().parameters.packageName",
                                    "type": "Expression"
                                },
                                "reloadAll": {
                                    "value": "@pipeline().parameters.reloadAll",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "LOAD20181215-04:12"
                    },
                    "packageName": {
                        "type": "String",
                        "defaultValue": "ETL"
                    },
                    "reloadAll": {
                        "type": "Bool",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "#ETL"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/pipelines/010 dim Static')]",
                "[concat(variables('factoryId'), '/pipelines/010 dim JDE 01')]",
                "[concat(variables('factoryId'), '/pipelines/010 dim JDE 02')]",
                "[concat(variables('factoryId'), '/pipelines/110 dim mix 01')]",
                "[concat(variables('factoryId'), '/pipelines/010 dim INX')]",
                "[concat(variables('factoryId'), '/pipelines/010 dim Survey123')]",
                "[concat(variables('factoryId'), '/pipelines/210 fact ZeroHarm')]",
                "[concat(variables('factoryId'), '/pipelines/010 dim Sharepoint')]",
                "[concat(variables('factoryId'), '/pipelines/310 DM ZeroHarm TS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/eRoadAPI')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateSQLDB\":\"v1.0.1\", \"lastModified\":\"2018-11-18\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Exec eRoadAPI_Copy",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{concat(toLower(item().tableName), '.csv')}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "OrcWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_CSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@concat(toLower(item().tableName), '.csv')",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Exec eRoadAPI_Copy",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "eRoadAPI_CopyAndMerge",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "sessionNo": {
                                                            "value": "@pipeline().parameters.sessionNo",
                                                            "type": "Expression"
                                                        },
                                                        "pipelineName": {
                                                            "value": "@pipeline().Pipeline",
                                                            "type": "Expression"
                                                        },
                                                        "tableName": {
                                                            "value": "@toLower(item().tableName)",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        },
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}', -- DW schema name: RAW_<sourceName>\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = SUBSTRING(table_name, CHARINDEX('_',table_name) + 1, 100),        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema='SCHEMATA' AND table_name like 'EROADAPI_%'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "eRoadAPI"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "eRoadAPI"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test01"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "eRoad"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_CSV')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/pipelines/eRoadAPI_CopyAndMerge')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/mainLoad - 2nd phase 6am')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Main schedule pipeline. Uses current session and executes other pipelines",
                "activities": [
                    {
                        "name": "getSession",
                        "description": "get new / last sessionNo (see pipeline input parameters)",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT sessionNo = CASE WHEN '@{pipeline().parameters.NewSession}' = 'Y' THEN [META].[newSession] (1, GETUTCDATE(),'DAILY')\n  ELSE ISNULL(MAX(sessionNo), [META].[newSession] (1, GETUTCDATE(),'DAILY'))\n  END\nFROM [META].[adfSession] WHERE sessionNo like 'DAILY%'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "Azure_DW",
                                "type": "DatasetReference",
                                "parameters": {
                                    "cw_structure": {
                                        "sessionNo": "String"
                                    },
                                    "cw_tableName": "meta.adfSession"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute eRoadS3",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "getSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "eRoadS3",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "eRoadS3",
                                "sourceType": "CSV",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "MAIN ETL PIPELINE",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute eRoadS3",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MAIN ETL PIPELINE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": "ETL",
                                "reloadAll": false
                            }
                        }
                    }
                ],
                "parameters": {
                    "StartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    },
                    "NewSession": {
                        "type": "String",
                        "defaultValue": "N"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-10-04T09:24:21Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/pipelines/eRoadS3')]",
                "[concat(variables('factoryId'), '/pipelines/MAIN ETL PIPELINE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/INX')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateSQLDB\":\"v1.0.1\", \"lastModified\":\"2018-11-18\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().tableSchema, '.', item().tableName)}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlSource",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "INX_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@{item().tableSchema}.@{item().tableName}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema to BS",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = table_name,        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_catalog = 'INX_EDI' \nand table_name  IN ( 'c_EventActionApprover', 'c_eventActionApproverAuditLog', 'vs_ClassValuesAll', 'c_ActivityWorkgroups', 'c_Tasks', 'c_unwantedevents', \n'c_relatedunwantedevents', 'c_controls', 'c_eventactions','ControlClass', 'c_events',  'c_EventWorkflow',  'c_EventWorkflowStep','WorkflowStatusCode', \n's_people', 'PersonClassValue', 's_ClassValues', 'c_eventtypes', 'c_eventTypeCategories', 'c_eventsubtypes', 's_organisations', \n'c_eventInvestigations', 'c_eventSummaries', 'c_EventActionType','c_eventinjuries', 'c_bodyparts', 'c_injurytypes', 'Stage', \n's_riskconsequencecodes', 's_risklikelihoodcodes', 'c_installation','c_injuryClassification', 'c_naturesofinjury', 'c_mechanismsofinjury', \n'c_agenciesofinjury',  'rep_EventCustomfields', 's_RiskMatrix','s_GenderClasses', 'c_eventparticipants', 'c_eventcustomfields', 'c_Exposure',\n 'vc_StaffContractorList') ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "OrcSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "INX_schema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Enterprise/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to DW",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy Schema to DW",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to BS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OrcSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Enterprise/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "INX"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "MSSQL"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test01"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "INX"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/INX_schema')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/INX_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE_Tennix')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateSQLDB\":\"v1.3.0\", \"lastModified\":\"2019-01-26\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().tableSchema, '.', item().tableName)}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlSource",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "JDE_Tennix_DataSet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@{item().tableSchema}.@{item().tableName}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@item().preCopyScript",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema to BS",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = table_name,        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE (\n\t(table_schema = 'PRODCTL' and table_name in ('f0005')) OR \n\t(table_schema = 'PRODDTA' and table_name in ('f0101','f03012', 'f060116', 'f0401', \n        'f4211', 'f1201', 'f1217', 'f1202', 'f0010', 'f4201', 'f4101', 'f0006', \n        'F00092JT', 'F00092RO', 'F00092XX'))\n) ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "OrcSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "JDE_Tennix_Schema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Division/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to DW",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy Schema to DW",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to BS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OrcSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Division/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "JDE_Tennix"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "MSSQL"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "TestJDE_Tennix"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "JDE Tennix"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/JDE_Tennix_Schema')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/JDE_Tennix_DataSet')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.0.2\", \"lastModified\":\"2018-12-17\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().jsonRequestUrl}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RelationalSource"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "TS_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_path": {
                                                                "value": "@item().jsonRequestUrl",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema \n\ttableName = SUBSTRING(table_name, CHARINDEX('_',table_name) + 1, 100),        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'SCHEMATA' AND table_name in ('TS_Survey123Licencing')",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "TS"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "OData"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:17Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/TS_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AD')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.0.2\", \"lastModified\":\"2018-12-17\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "FileSystemSource",
                                                        "recursive": false
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ADUserDetails",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "windowStartTime": {
                                                                "value": "@pipeline().parameters.windowStartTime",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        },
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "ODS upd_UserDetails",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "postCopy Script",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[ODS_AD].[upd_UserDetails]",
                                                    "storedProcedureParameters": {
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}', -- DW schema name: RAW_<sourceName>\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = SUBSTRING(table_name, CHARINDEX('_',table_name) + 1, 100),        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema='SCHEMATA' AND table_name like 'AD_%'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy AD Photos",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "FileSystemSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings",
                                    "copyBehavior": "PreserveHierarchy"
                                }
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": true,
                            "dataIntegrationUnits": 0
                        },
                        "inputs": [
                            {
                                "referenceName": "ADUserPhotos",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Azure_ADL_RAW_BINARY_IRNZPRDEDWAZE01",
                                "type": "DatasetReference",
                                "parameters": {
                                    "bsFolderName": {
                                        "value": "shared-blobs/employee-photos",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "AD"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "CSV"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test01"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "ADUsers"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T18:44:38Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/ADUserPhotos')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_BINARY_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/ADUserDetails')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Survey123SP')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.0.2\", \"lastModified\":\"2018-12-17\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RelationalSource"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Survey123SP_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_path": {
                                                                "value": "@item().jsonRequestUrl",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = table_name,        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'SCHEMATA' AND table_name in ('CC_Action', 'SBC_Action')",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "Survey123SP"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "OData"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/Survey123SP_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/JDE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateSQLDB\":\"v1.0.1\", \"lastModified\":\"2018-11-18\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().tableSchema, '.', item().tableName)}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlSource",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "JDE_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@{item().tableSchema}.@{item().tableName}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema to BS",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = table_name,        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE (\n\t(table_schema = 'PRODCTL' and table_name in ('f0005')) OR \n\t(table_schema = 'PRODDTA' and table_name in ('f0101','f03012', 'f060116', 'f0401', \n        'f4211', 'f1201', 'f1217', 'f1202', 'f0010', 'f4201', 'f4101', 'f0006', \n        'F00092JT', 'F00092RO', 'F00092XX'))\n) ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "OrcSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "JDE_schema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Division/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "FULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to DW",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy Schema to DW",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to BS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OrcSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Division/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "JDE"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "MSSQL"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test01"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "JDE"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/JDE_schema')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/JDE_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tplSQLDB v1-2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateSQLDB\":\"v1.3.0\", \"lastModified\":\"2019-01-26\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlSource",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "template_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@{item().tableSchema}.@{item().tableName}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@item().preCopyScript",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = table_name,        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "OrcSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "template_schema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/template/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to DW",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy Schema to DW",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OrcSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/template/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "Survey123"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "MSSQL"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "Templates"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/template_schema')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/template_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tplOData v1-2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.3.0\", \"lastModified\":\"2019-01-26\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RelationalSource"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "template_OData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_path": {
                                                                "value": "@item().jsonRequestUrl",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@item().preCopyScript",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = table_name,        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'SCHEMATA' AND table_name in ('CC_Action', 'SBC_Action')",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "Survey123SP"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "OData"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "Templates"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/template_OData')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TSAnalytics')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.0.2\", \"lastModified\":\"2018-12-17\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().jsonRequestUrl}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RelationalSource"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "TSAnalytics_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_path": {
                                                                "value": "@item().jsonRequestUrl",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = SUBSTRING(table_name, CHARINDEX('_',table_name) + 1, 100),        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'SCHEMATA' AND table_name like 'TSAnalytics%'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ODS Thresholds",
                        "description": "update [ods].[Thresholds] table with latest changes from [MaturityThresholds] and [AuditThresholds] Sharepoint lists",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEach adfTable",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ods].[upd_Thresholds]",
                            "storedProcedureParameters": {
                                "fullLoad": {
                                    "value": "Y",
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "reCreate": {
                                    "value": "N",
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ODS.Thresholds",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "TSAnalytics"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "OData"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:25Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/TSAnalytics_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SPZeroHarm')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateOData\":\"v1.0.2\", \"lastModified\":\"2018-12-17\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestUrl,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().jsonRequestUrl}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RelationalSource"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SPZeroHarm_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": "@json(item().jsonSourceStructure)",
                                                            "cw_path": "@item().jsonRequestUrl"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Schema",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = SUBSTRING(table_name, CHARINDEX('_',table_name) + 1, 100),        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'SCHEMATA' AND table_name in ('SPZeroHarm_UserInformationList')",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "columnMappings": {
                                                "pipelineName": "pipelineName",
                                                "dataFactory": "dataFactory",
                                                "sourceName": "sourceName",
                                                "sourceType": "sourceType",
                                                "pipelineTriggerID": "pipelineTriggerID",
                                                "pipelineTriggerName": "pipelineTriggerName",
                                                "pipelineTriggerTime": "pipelineTriggerTime",
                                                "pipelineTriggerType": "pipelineTriggerType",
                                                "tableCatalog": "tableCatalog",
                                                "tableSchema": "tableSchema",
                                                "tableName": "tableName",
                                                "columnName": "columnName",
                                                "ordinalPosition": "ordinalPosition",
                                                "columnDefault": "columnDefault",
                                                "isNullable": "isNullable",
                                                "dataType": "dataType",
                                                "characterMaximumLength": "characterMaximumLength",
                                                "characterOctetLength": "characterOctetLength",
                                                "numericPrecision": "numericPrecision",
                                                "numericPrecisionRadix": "numericPrecisionRadix",
                                                "numericScale": "numericScale"
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "meta_schemata",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "SPZeroHarm"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "OData"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/meta_schemata')]",
                "[concat(variables('factoryId'), '/datasets/SPZeroHarm_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Survey123DB')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "{\"templateSQLDB\":\"v1.0\", \"lastModified\":\"2018-11-11\"}",
                "activities": [
                    {
                        "name": "Get active adfTables",
                        "description": "Lookup active adfTables (isActive='Y')",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "setSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n    t.pipelineName, \n    t.tableCatalog, \n    t.tableSchema, \n    t.tableName, \n    t.isActive, \n    t.checkStatus,\n    t.bsFileType,\n    t.bsFolderName,\n    t.bsFileName,\n    t.bsArcFolderName,\n    t.bsArcFileName,\n    t.dwTableSchema,\n    t.dwTableName,\n    t.extParameters,\n    t.jsonRequestBody,\n    t.jsonSourceStructure,\n    t.jsonDestinationStructure,\n    t.jsonMappingBS,\n    t.jsonMappingDW,\n    t.preCopyScript,\n    t.postCopyScript,\n    t.ddlCreateTable,\n    t.odsTableSchema,\n    t.odsTableName,\n    t.odsLoadType,\n    t.odsLoadProc\nFROM META.adfTables t\nWHERE t.isActive='Y' and t.pipelineName = '@{pipeline().Pipeline}'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "meta_adfLoadSchema",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach adfTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "test checkActiveTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get active adfTables').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "BS load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "getStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusBS, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to BS",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus BS Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{concat(item().tableSchema, '.', item().tableName)}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlSource",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Survey123DB_data",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonSourceStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@{item().tableSchema}.@{item().tableName}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log BS",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test BS checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to BS",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to BS').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus BS Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log BS skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "BS",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "getStatus",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT s.sessionNo, \n    s.pipelineName, \n    s.tableSchema, \n    s.tableName, \n    s.dwTableSchema, \n    s.dwTableName, \n    s.StatusBS, \n    s.StatusARC, \n    s.StatusDWRAW, \n    s.StatusDWODS, \n    s.StatusDWODSH\nFROM [META].[adfSession] s\nWHERE s.sessionNo = '@{pipeline().parameters.sessionNo}' \nAND s.pipelineName = '@{pipeline().Pipeline}'\nAND s.tableName = '@{item().tableName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "meta_adfSession",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "DW load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusDWRAW, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to DW",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus DW Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBatchSize": 10000,
                                                        "preCopyScript": {
                                                            "value": "@{item().preCopyScript}",
                                                            "type": "Expression"
                                                        },
                                                        "allowPolyBase": {
                                                            "value": "@equals(json(item().extParameters).allowPolyBase, 'true')",
                                                            "type": "Expression"
                                                        },
                                                        "polyBaseSettings": {
                                                            "rejectValue": 0,
                                                            "rejectType": "value",
                                                            "useTypeDefault": true
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingDW",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_DW",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "cw_structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            },
                                                            "cw_tableName": {
                                                                "value": "@concat(item().dwTableSchema, '.', item().dwTableName, '_upsert')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log DW",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "postCopy Script",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "test DW checkRowsCopied",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[runPostCopyScript]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test DW checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to DW",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to DW').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus DW Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "log DW skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWRAW",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARC load if needed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "BS load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('getStatus').output.firstRow.statusARC, 'Succeeded')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Copy to ARC",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "setStatus ARC Processing",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [
                                                    {
                                                        "name": "Source",
                                                        "value": "@{item().bsFolderName}/@{item().bsFileName}"
                                                    },
                                                    {
                                                        "name": "Destination",
                                                        "value": "@{concat(item().bsArcFolderName, '/', formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd'), '/')}/@{item().bsArcFileName}"
                                                    }
                                                ],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "OrcSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "OrcSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "dataIntegrationUnits": 0,
                                                    "translator": {
                                                        "value": "@item().jsonMappingBS",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_RAW_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@item().bsFolderName",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "Azure_ADL_ARCHIVE_ORC",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folder_name": {
                                                                "value": "@{item().bsArcFolderName}/@{formatDateTime(pipeline().parameters.windowStartTime, 'yyyy/MM/dd')}/",
                                                                "type": "Expression"
                                                            },
                                                            "file_name": {
                                                                "value": "@item().bsArcFileName",
                                                                "type": "Expression"
                                                            },
                                                            "structure": {
                                                                "value": "@json(item().jsonDestinationStructure)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "log ARC",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "test ARC checkRowsCopied",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to ARC",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[testPipeline]",
                                                    "storedProcedureParameters": {
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string(activity('Copy to ARC').output)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@pipeline().Pipeline",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "setStatus ARC Processing",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": "{\"status\": \"Processing\"}",
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "true",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "logARC skip",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[addSessionLog]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "activityOutput": {
                                                            "value": {
                                                                "value": "@string('{\"status\":\"Succeeded\", \"message\":\"skip - already loaded\"}')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "ARC",
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "updateStatus": {
                                                            "value": "false",
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODS load if needed",
                                    "description": "ODS load if not loaded yet and if odsLoadType='Dynamic'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Dynamic'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "odsExecute",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[META].[odsExecute]",
                                                    "storedProcedureParameters": {
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "stepName": {
                                                            "value": "DWODS",
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "odsTableName": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Custom ODS if needed",
                                    "description": "Custom ODS load if not loaded yet and if odsLoadType='Custom'",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "DW load if needed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(not(equals(activity('getStatus').output.firstRow.statusDWODS, 'Succeeded')), equals(item().odsLoadType, 'Custom'))\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Custom ODS load",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@item().odsLoadProc",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "sessionNo": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.sessionNo",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineName": {
                                                            "value": {
                                                                "value": "@item().pipelineName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "tableName": {
                                                            "value": {
                                                                "value": "@item().tableName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "fullLoad": {
                                                            "value": "N",
                                                            "type": "String"
                                                        },
                                                        "reCreate": {
                                                            "value": "N",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "DW",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate or Not",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.generate, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Generate",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to DW",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[META].[adfGenerateMain]",
                                        "storedProcedureParameters": {
                                            "pipelineName": {
                                                "value": {
                                                    "value": "@pipeline().Pipeline",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "DW",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy Schema to BS",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n    pipelineName = '@{pipeline().Pipeline}',\n    dataFactory = '@{pipeline().DataFactory}',\n    sourceName = '@{pipeline().parameters.sourceName}',\n    sourceType = '@{pipeline().parameters.sourceType}',\n    pipelineTriggerID = '@{pipeline().TriggerId}',\n    pipelineTriggerName = '@{pipeline().TriggerName}',\n    pipelineTriggerTime = '@{pipeline().TriggerTime}',\n    pipelineTriggerType = '@{pipeline().TriggerType}',\n    tableCatalog = table_catalog,  -- soure database name\n    tableSchema = table_schema,    -- source table schema\n    tableName = table_name,        -- source table name\n    columnName = column_name, \n    ordinalPosition = ordinal_position, \n    columnDefault = column_default, \n    isNullable = is_nullable, \n    dataType = data_type, \n    characterMaximumLength = character_maximum_length, \n    characterOctetLength = character_octet_length, \n    numericPrecision = numeric_precision, \n    numericPrecisionRadix = numeric_precision_radix, \n    numericScale = numeric_scale\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE table_schema = 'NDW'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "OrcSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Survey123DB_schema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Division/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Copy Schema to DW",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Schema to BS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OrcSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBatchSize": 10000,
                                            "preCopyScript": {
                                                "value": "DELETE FROM META.adfLoadSchema WHERE pipelineName = '@{pipeline().Pipeline}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 0
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Azure_ADL_RAW_ORC",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folder_name": {
                                                    "value": "metadata/schema/Division/Downer NZ/@{pipeline().Pipeline}",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "schema.orc",
                                                    "type": "Expression"
                                                },
                                                "structure": {
                                                    "value": "NULL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "meta_adfLoadSchema",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "log getTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[addSessionLog]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "GetTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                },
                                "updateStatus": {
                                    "value": "false",
                                    "type": "Boolean"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "test checkActiveTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get active adfTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[testPipeline]",
                            "storedProcedureParameters": {
                                "activityOutput": {
                                    "value": {
                                        "value": "@string(activity('Get active adfTables').output.count)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "stepName": {
                                    "value": "checkActiveTables",
                                    "type": "String"
                                },
                                "tableName": {
                                    "value": "ALL",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "setSession",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Generate or Not",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[META].[setSession]",
                            "storedProcedureParameters": {
                                "pipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sessionNo": {
                                    "value": {
                                        "value": "@pipeline().parameters.sessionNo",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "DW",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "sourceName": {
                        "type": "String",
                        "defaultValue": "Survey123DB"
                    },
                    "sourceType": {
                        "type": "String",
                        "defaultValue": "MSSQL"
                    },
                    "generate": {
                        "type": "Bool",
                        "defaultValue": false
                    },
                    "sessionNo": {
                        "type": "String",
                        "defaultValue": "Test01"
                    },
                    "windowStartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    }
                },
                "folder": {
                    "name": "Survey123DB"
                },
                "annotations": [],
                "lastPublishTime": "2020-10-01T09:13:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/meta_adfLoadSchema')]",
                "[concat(variables('factoryId'), '/linkedServices/DW')]",
                "[concat(variables('factoryId'), '/datasets/meta_adfSession')]",
                "[concat(variables('factoryId'), '/datasets/Survey123DB_schema')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC_IRNZPRDEDWAZE01')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_RAW_ORC')]",
                "[concat(variables('factoryId'), '/datasets/Survey123DB_data')]",
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/datasets/Azure_ADL_ARCHIVE_ORC')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/mainLoad')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Main schedule pipeline. Creates new session and executes other pipelines",
                "activities": [
                    {
                        "name": "getSession",
                        "description": "get new / last sessionNo (see pipeline input parameters)",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT sessionNo = CASE WHEN '@{pipeline().parameters.NewSession}' = 'Y' THEN [META].[newSession] (1, GETUTCDATE(),'DAILY')\n  ELSE ISNULL(MAX(sessionNo), [META].[newSession] (1, GETUTCDATE(),'DAILY'))\n  END\nFROM [META].[adfSession] WHERE sessionNo like 'DAILY%'",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "Azure_DW",
                                "type": "DatasetReference",
                                "parameters": {
                                    "cw_structure": {
                                        "sessionNo": "String"
                                    },
                                    "cw_tableName": "meta.adfSession"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute Survey123DB",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute JDE_Tennix",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Survey123DB",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "Survey123DB",
                                "sourceType": "MSSQL",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute AD",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "getSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "AD",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "AD",
                                "sourceType": "CSV",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute INX",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute AD",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "INX",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "INX",
                                "sourceType": "MSSQL",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute JDE",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "getSession",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "JDE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "JDE",
                                "sourceType": "MSSQL",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute Survey123SP",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute eRoadAPI",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Survey123SP",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "Survey123SP",
                                "sourceType": "OData",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute TSAnalytics",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute Survey123SP",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "TSAnalytics",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "TSAnalytics",
                                "sourceType": "OData",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute TS",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute Survey123SP",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "TS",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "TS",
                                "sourceType": "OData",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute SPZeroHarm",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute Survey123SP",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "SPZeroHarm",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "SPZeroHarm",
                                "sourceType": "OData",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute eRoadAPI",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute JDE",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute INX",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "eRoadAPI",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "eRoadAPI",
                                "sourceType": "eRoadAPI",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "MAIN ETL PIPELINE",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute TSAnalytics",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute TS",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute SPZeroHarm",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute SPOTSAnalytics",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute Survey123DB",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MAIN ETL PIPELINE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "packageName": "ETL",
                                "reloadAll": false
                            }
                        }
                    },
                    {
                        "name": "Execute JDE_Tennix",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute JDE",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute INX",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "JDE_Tennix",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "JDE_Tennix",
                                "sourceType": "MSSQL",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute SPOTSAnalytics",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute Survey123SP",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "SPOTSAnalytics",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sourceName": "SPOTSAnalytics",
                                "sourceType": "OData",
                                "generate": false,
                                "sessionNo": {
                                    "value": "@activity('getSession').output.firstRow.sessionNo",
                                    "type": "Expression"
                                },
                                "windowStartTime": {
                                    "value": "@pipeline().parameters.StartTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "StartTime": {
                        "type": "String",
                        "defaultValue": "2018-11-07T00:00:00Z"
                    },
                    "NewSession": {
                        "type": "String",
                        "defaultValue": "N"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-10-04T09:24:21Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Azure_DW')]",
                "[concat(variables('factoryId'), '/pipelines/Survey123DB')]",
                "[concat(variables('factoryId'), '/pipelines/AD')]",
                "[concat(variables('factoryId'), '/pipelines/INX')]",
                "[concat(variables('factoryId'), '/pipelines/JDE')]",
                "[concat(variables('factoryId'), '/pipelines/Survey123SP')]",
                "[concat(variables('factoryId'), '/pipelines/TSAnalytics')]",
                "[concat(variables('factoryId'), '/pipelines/TS')]",
                "[concat(variables('factoryId'), '/pipelines/SPZeroHarm')]",
                "[concat(variables('factoryId'), '/pipelines/eRoadAPI')]",
                "[concat(variables('factoryId'), '/pipelines/MAIN ETL PIPELINE')]",
                "[concat(variables('factoryId'), '/pipelines/JDE_Tennix')]",
                "[concat(variables('factoryId'), '/pipelines/SPOTSAnalytics')]"
            ]
        }
    ]
}